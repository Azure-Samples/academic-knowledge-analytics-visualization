//Make sure to run CreateDatabase script from common scripts first!
USE DATABASE AcdemicGraph;

//This path is hardcoded to pbi file. If this is changed, pbi file needs to be modified as well
DECLARE @conferenceAnalyticsBaseDir string = @"/output/conferenceAnalytics/"; 

//Change this variable to do calculation for different conferences
DECLARE @conferenceShortName string = "WWW";  

DECLARE @outputBaseDir string = @conferenceAnalyticsBaseDir + @conferenceShortName + "/";

DECLARE @conferenceBasicStatsOutPath string = @outputBaseDir + "conferenceBasicStats.tsv";

		
//Get all conference papers. 
@allconferencePapers =
    SELECT PaperId,
           CitationCount,
           (long) ConferenceSeriesId AS ConferenceSeriesId  //Cast ConferenceSeriesId to long from long? so join operations can be performed.
    FROM Paper
    WHERE ConferenceSeriesId IS NOT NULL; //Ensure cast doesn't fail by excluding null rows
    
    
//Get all conference papers by normalized conference series name
@conferencePapers =
    SELECT @allconferencePapers.PaperId,
           @allconferencePapers.CitationCount,
           @allconferencePapers.ConferenceSeriesId AS VenueId
    FROM @allconferencePapers
         JOIN
             ConferenceSeries
         ON  @allconferencePapers.ConferenceSeriesId == ConferenceSeries.ConferenceSeriesId
    WHERE ConferenceSeries.NormalizedName == @conferenceShortName;

 
//Get all reference from [Conference Paper] -> [Other Paper]
@conferenceReferencedPapers =
    SELECT @conferencePapers.PaperId,
           @conferencePapers.Year,
           Paper.PaperId AS ReferenceId
    FROM Paper
         JOIN
             PaperReference
         ON Paper.PaperId == PaperReference.PaperReferenceId
         JOIN
             @conferencePapers
         ON PaperReference.PaperId == @conferencePapers.PaperId;

//Get total reference count for each year
@conferenceReferenceStats =
    SELECT COUNT( * ) AS ReferenceCount,
           Year
    FROM @conferenceReferencedPapers
    GROUP BY Year;

//Get total publication/citation count for each year
@conferencePaperCitationStats =
    SELECT COUNT( * ) AS PublicationCount,
           SUM(@conferencePapers.CitationCount) AS CitationCount,
           @conferencePapers.Year
    FROM @conferencePapers
    GROUP BY Year;


@conferencePaperStats =
    SELECT @conferencePaperCitationStats.Year,
           @conferencePaperCitationStats.PublicationCount AS PublicationCount,
           //Cast to float first before division to ensure fractions are calculated correctly
           (float)@conferencePaperCitationStats.CitationCount / @conferencePaperCitationStats.PublicationCount AS AverageCitationCount,
           (float)@conferenceReferenceStats.ReferenceCount / @conferencePaperCitationStats.PublicationCount AS AverageReferenceCount
    FROM @conferencePaperCitationStats
         JOIN
             @conferenceReferenceStats
         ON @conferencePaperCitationStats.Year == @conferenceReferenceStats.Year;

OUTPUT @conferencePaperStats
TO @conferenceBasicStatsOutPath
USING Outputters.Tsv(outputHeader : true);