// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

//Make sure to run "graph/<YYYY-MM-DD>/samples/CreateFunctions.usql" first!

//*******************Input Variable Section********************************
//        Change these variables for different graph versions
//*************************************************************************
DECLARE @graphVersion string = "2018-04-13";

//*******************Constant Variable Section*****************************
//        Defining const variables to be used by other parts of the script
//*************************************************************************
DECLARE @graphDir   string = "/graph/" + @graphVersion + "/";


DROP DATABASE IF EXISTS AcdemicGraph; 
CREATE DATABASE AcdemicGraph;
USE DATABASE AcdemicGraph;


CREATE TABLE Affiliation
(
    INDEX af_indx
    CLUSTERED(AffiliationId)
    DISTRIBUTED BY
    HASH(AffiliationId)
)AS
master.dbo.Affiliations
(
    @graphDir
);

CREATE TABLE Author
(
    INDEX au_idx
    CLUSTERED(AuthorId)
    DISTRIBUTED BY
    HASH(AuthorId)
) AS
master.dbo.Authors
(
    @graphDir
);

CREATE TABLE ConferenceInstance
(
    INDEX ci_idx
    CLUSTERED(ConferenceInstanceId)
    DISTRIBUTED BY
    HASH(ConferenceInstanceId)
) AS
master.dbo.ConferenceInstances
(
    @graphDir
);

CREATE TABLE ConferenceSeries
(
    INDEX cs_idx
    CLUSTERED(ConferenceSeriesId)
    DISTRIBUTED BY
    HASH(ConferenceSeriesId)
) AS
master.dbo.ConferenceSeries
(
    @graphDir
);

CREATE TABLE FieldOfStudy
(
    INDEX f_idx
    CLUSTERED(FieldOfStudyId)
    DISTRIBUTED BY
    HASH(FieldOfStudyId)
) AS
master.dbo.FieldsOfStudy
(
    @graphDir
);

CREATE TABLE FieldOfStudyChildren
(
    INDEX fc_idx
    CLUSTERED(FieldOfStudyId, ChildFieldOfStudyId)
    DISTRIBUTED BY
    HASH(FieldOfStudyId, ChildFieldOfStudyId)
) AS
master.dbo.FieldOfStudyChildren
(
    @graphDir
);

CREATE TABLE Journal
(
    INDEX j_idx
    CLUSTERED(JournalId)
    DISTRIBUTED BY
    HASH(JournalId)
) AS
master.dbo.Journals
(
    @graphDir
);

CREATE TABLE Paper
(
    INDEX p_idx
    CLUSTERED(PaperId)
    DISTRIBUTED BY
    HASH(PaperId)
) AS
master.dbo.Papers
(
    @graphDir
);

CREATE TABLE PaperAbstractInvertedIndex
(
    INDEX pa_idx
    CLUSTERED(PaperId)
    DISTRIBUTED BY
    HASH(PaperId)
) AS
master.dbo.PaperAbstractsInvertedIndex
(
    @graphDir
);

CREATE TABLE PaperAuthorAffiliation
(
    INDEX paa_idx
    CLUSTERED(PaperId, AuthorId, AffiliationId)
    DISTRIBUTED BY
    HASH(PaperId, AuthorId, AffiliationId)
) AS
master.dbo.PaperAuthorAffiliations
(
    @graphDir
);

CREATE TABLE PaperCitationContext
(
    INDEX pc_idx
    CLUSTERED(PaperId, PaperReferenceId)
    DISTRIBUTED BY
    HASH(PaperId, PaperReferenceId)
) AS
master.dbo.PaperCitationContexts
(
    @graphDir
);

CREATE TABLE PaperFieldOfStudy
(
    INDEX pfos_idx
    CLUSTERED(PaperId, FieldOfStudyId)
    DISTRIBUTED BY
    HASH(PaperId, FieldOfStudyId)
) AS
master.dbo.PaperFieldsOfStudy
(
    @graphDir
);

CREATE TABLE PaperLanguage
(
    INDEX pl_idx
    CLUSTERED(PaperId)
    DISTRIBUTED BY
    HASH(PaperId)
) AS
master.dbo.PaperLanguages
(
    @graphDir
);

CREATE TABLE PaperRecommendation
(
    INDEX pr_idx
    CLUSTERED(PaperId)
    DISTRIBUTED BY
    HASH(PaperId)
) AS
master.dbo.PaperRecommendations
(
    @graphDir
);

CREATE TABLE PaperReference
(
    INDEX pr_idx
    CLUSTERED(PaperId, PaperReferenceId)
    DISTRIBUTED BY
    HASH(PaperId)
) AS
master.dbo.PaperReferences
(
    @graphDir
);

CREATE TABLE PaperUrl
(
    INDEX purl_idx
    CLUSTERED(PaperId)
    DISTRIBUTED BY
    HASH(PaperId)
) AS
master.dbo.PaperUrls
(
    @graphDir
);