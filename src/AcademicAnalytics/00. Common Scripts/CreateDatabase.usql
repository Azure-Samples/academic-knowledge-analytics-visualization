
DECLARE @dataVersion string = "mag-##DatasetVersion##";
DECLARE @blobAccount string = "##YourBlobAccount##";
DECLARE @uriPrefix   string = "wasb://" + @dataVersion + "@" + @blobAccount + "/";

DROP DATABASE IF EXISTS AcdemicGraph; 
CREATE DATABASE AcdemicGraph;
USE DATABASE AcdemicGraph;


CREATE TABLE Affiliations(
      INDEX clx_AffiliationId CLUSTERED(AffiliationId ASC) 
      DISTRIBUTED BY HASH (AffiliationId)
) AS EXTRACT  
    AffiliationId long,
    Rank uint,
    NormalizedName string,
    DisplayName string,
    GridId string,
    OfficialPage string,
    WikiPage string,
    PaperCount long,
    CitationCount long,
    CreatedDate DateTime
  FROM @uriPrefix + "mag/Affiliations.txt"
  USING Extractors.Tsv(silent: false, quoting: false);


CREATE TABLE Authors(
      INDEX clx_AuthorId CLUSTERED(AuthorId ASC) 
      DISTRIBUTED BY HASH (AuthorId)
) AS EXTRACT  
    AuthorId long,
    Rank uint,
    NormalizedName string,
    DisplayName string,
    LastKnownAffiliationId long?,
    PaperCount long,
    CitationCount long,
    CreatedDate DateTime
  FROM @uriPrefix + "mag/Authors.txt"
  USING Extractors.Tsv(silent: false, quoting: false);


CREATE TABLE ConferenceInstances(
      INDEX clx_ConferenceInstanceId CLUSTERED(ConferenceInstanceId ASC) 
      DISTRIBUTED BY HASH (ConferenceInstanceId)
) AS EXTRACT  
    ConferenceInstanceId long,
    NormalizedName string,
    DisplayName string,
    ConferenceSeriesId long,
    Location string,
    OfficialUrl string,
    StartDate DateTime?,
    EndDate DateTime?,
    AbstractRegistrationDate DateTime?,
    SubmissionDeadlineDate DateTime?,
    NotificationDueDate DateTime?,
    FinalVersionDueDate DateTime?,
    PaperCount long,
    CitationCount long,
    CreatedDate DateTime
  FROM @uriPrefix + "mag/ConferenceInstances.txt"
  USING Extractors.Tsv(silent: false, quoting: false);


CREATE TABLE ConferenceSeries(
      INDEX clx_ConferenceSeriesId CLUSTERED(ConferenceSeriesId ASC) 
      DISTRIBUTED BY HASH (ConferenceSeriesId)
) AS EXTRACT  
    ConferenceSeriesId long,
    Rank uint,
    NormalizedName string,
    DisplayName string,
    PaperCount long,
    CitationCount long,
    CreatedDate DateTime
  FROM @uriPrefix + "mag/ConferenceSeries.txt"
  USING Extractors.Tsv(silent: false, quoting: false);


CREATE TABLE FieldOfStudyChildren(
      INDEX clx_FieldOfStudyId CLUSTERED(FieldOfStudyId ASC) 
      DISTRIBUTED BY HASH (FieldOfStudyId)
) AS EXTRACT  
    FieldOfStudyId long,
    ChildFieldOfStudyId long
  FROM @uriPrefix + "advanced/FieldOfStudyChildren.txt"
  USING Extractors.Tsv(silent: false, quoting: false);


CREATE TABLE FieldsOfStudy(
      INDEX clx_FieldOfStudyId CLUSTERED(FieldOfStudyId ASC) 
      DISTRIBUTED BY HASH (FieldOfStudyId)
) AS EXTRACT  
    FieldOfStudyId long,
    Rank uint,
    NormalizedName string,
    DisplayName string,
    MainType string,
    Level int,
    PaperCount long,
    CitationCount long,
    CreatedDate DateTime
  FROM @uriPrefix + "mag/FieldsOfStudy.txt"
  USING Extractors.Tsv(silent: false, quoting: false);


CREATE TABLE Journals(
      INDEX clx_JournalId CLUSTERED(JournalId ASC) 
      DISTRIBUTED BY HASH (JournalId)
) AS EXTRACT  
    JournalId long,
    Rank uint,
    NormalizedName string,
    DisplayName string,
    Issn string,
    Publisher string,
    Webpage string,
    PaperCount long,
    CitationCount long,
    CreatedDate DateTime
  FROM @uriPrefix + "mag/Journals.txt"
  USING Extractors.Tsv(silent: false, quoting: false);


CREATE TABLE PaperAbstractsInvertedIndex(
      INDEX clx_PaperId CLUSTERED(PaperId ASC) 
      DISTRIBUTED BY HASH (PaperId)
) AS EXTRACT  
    PaperId long,
    IndexedAbstract string
  FROM @uriPrefix + "nlp/PaperAbstractsInvertedIndex.txt"
  USING Extractors.Tsv(silent: false, quoting: false);


CREATE TABLE PaperAuthorAffiliations(
      INDEX clx_PaperId CLUSTERED(PaperId ASC) 
      DISTRIBUTED BY HASH (PaperId)
) AS EXTRACT  
    PaperId long,
    AuthorId long,
    AffiliationId long?,
    AuthorSequenceNumber uint,
    OriginalAffiliation string
  FROM @uriPrefix + "mag/PaperAuthorAffiliations.txt"
  USING Extractors.Tsv(silent: false, quoting: false);


CREATE TABLE PaperCitationContexts(
      INDEX clx_PaperId CLUSTERED(PaperId ASC) 
      DISTRIBUTED BY HASH (PaperId)
) AS EXTRACT  
    PaperId long,
    PaperReferenceId long,
    CitationContext string
  FROM @uriPrefix + "nlp/PaperCitationContexts.txt"
  USING Extractors.Tsv(silent: false, quoting: false);


CREATE TABLE PaperFieldsOfStudy(
      INDEX clx_PaperId CLUSTERED(PaperId ASC) 
      DISTRIBUTED BY HASH (PaperId)
) AS EXTRACT  
    PaperId long,
    FieldOfStudyId long,
    Score float
  FROM @uriPrefix + "advanced/PaperFieldsOfStudy.txt"
  USING Extractors.Tsv(silent: false, quoting: false);


CREATE TABLE PaperLanguages(
      INDEX clx_PaperId CLUSTERED(PaperId ASC) 
      DISTRIBUTED BY HASH (PaperId)
) AS EXTRACT  
    PaperId long,
    LanguageCode string
  FROM @uriPrefix + "nlp/PaperLanguages.txt"
  USING Extractors.Tsv(silent: false, quoting: false);


CREATE TABLE PaperRecommendations(
      INDEX clx_PaperId CLUSTERED(PaperId ASC) 
      DISTRIBUTED BY HASH (PaperId)
) AS EXTRACT  
    PaperId long,
    RecommendedPaperId long,
    Score float
  FROM @uriPrefix + "advanced/PaperRecommendations.txt"
  USING Extractors.Tsv(silent: false, quoting: false);


CREATE TABLE PaperReferences(
      INDEX clx_PaperId CLUSTERED(PaperId ASC) 
      DISTRIBUTED BY HASH (PaperId)
) AS EXTRACT  
    PaperId long,
    PaperReferenceId long
  FROM @uriPrefix + "mag/PaperReferences.txt"
  USING Extractors.Tsv(silent: false, quoting: false);


CREATE TABLE PaperResources(
      INDEX clx_PaperId CLUSTERED(PaperId ASC) 
      DISTRIBUTED BY HASH (PaperId)
) AS EXTRACT  
    PaperId long,
    ResourceType int,
    ResourceUrl string,
    SourceUrl string,
    RelationshipType int
  FROM @uriPrefix + "mag/PaperResources.txt"
  USING Extractors.Tsv(silent: false, quoting: false);


CREATE TABLE PaperUrls(
      INDEX clx_PaperId CLUSTERED(PaperId ASC) 
      DISTRIBUTED BY HASH (PaperId)
) AS EXTRACT  
    PaperId long,
    SourceType int?,
    SourceUrl string
  FROM @uriPrefix + "mag/PaperUrls.txt"
  USING Extractors.Tsv(silent: false, quoting: false);


CREATE TABLE Papers(
      INDEX clx_PaperId CLUSTERED(PaperId ASC) 
      DISTRIBUTED BY HASH (PaperId)
) AS EXTRACT  
    PaperId long,
    Rank uint,
    Doi string,
    DocType string,
    PaperTitle string,
    OriginalTitle string,
    BookTitle string,
    Year int,
    Date DateTime?,
    Publisher string,
    JournalId long?,
    ConferenceSeriesId long?,
    ConferenceInstanceId long?,
    Volume string,
    Issue string,
    FirstPage string,
    LastPage string,
    ReferenceCount long,
    CitationCount long,
    EstimatedCitation long,
    OriginalVenue string,
    CreatedDate DateTime
  FROM @uriPrefix + "mag/Papers.txt"
  USING Extractors.Tsv(silent: false, quoting: false);


CREATE TABLE RelatedFieldOfStudy(
      INDEX clx_FieldOfStudyId1 CLUSTERED(FieldOfStudyId1 ASC) 
      DISTRIBUTED BY HASH (FieldOfStudyId1)
) AS EXTRACT  
    FieldOfStudyId1 long,
    Type1 string,
    FieldOfStudyId2 long,
    Type2 string,
    Rank float
  FROM @uriPrefix + "advanced/RelatedFieldOfStudy.txt"
  USING Extractors.Tsv(silent: false, quoting: false);