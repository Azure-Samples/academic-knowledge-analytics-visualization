//Make sure to run CreateDatabase script from common scripts first!
USE DATABASE AcdemicGraph;

//*******************Input Variable Section********************************
//        Change these variables for different calculations
//*************************************************************************
DECLARE @conferenceShortName string = "WWW";  //Conference abbreviated name 

//*******************Constant Variable Section*****************************
//        Defining const variables to be used by other parts of the script
//*************************************************************************
//This output path pattern is hardcoded to the pbi file. If this is changed, the pbi file needs to be modified as well
DECLARE @conferenceAnalyticsBaseDir string = @"/output/conferenceAnalytics/";
DECLARE @outputBaseDir string = @conferenceAnalyticsBaseDir + @conferenceShortName + "/";

//*************************Ouptut Section**********************************
//                 All output files for this script.
//*************************************************************************
DECLARE @conferenceReferenceMemoryOutPath string = @outputBaseDir + "conferenceReferenceMemory.tsv";




//First find the conference series id by matching conference short name.
@targetConferenceSeriesId =
    SELECT (long?) ConferenceSeriesId AS ConferenceSeriesId //Cast long to long? to join against Paper table
    FROM ConferenceSeries
    WHERE NormalizedName == @conferenceShortName;


//Get all conference papers by conference series Id.
@conferencePapers =
    SELECT Paper.PaperId,
           Paper.Year,
           Paper.CitationCount
    FROM Paper
         INNER JOIN
             @targetConferenceSeriesId
         ON Paper.ConferenceSeriesId == @targetConferenceSeriesId.ConferenceSeriesId;
 
 
//Get all reference from [conference Paper] -> [referenced paper]
@conferencePaperReferences =
    SELECT @conferencePapers.PaperId,
           @conferencePapers.Year,
           Paper.PaperId AS ReferenceId,
           Paper.Year AS ReferenceYear
    FROM Paper
         INNER JOIN
             PaperReference
         ON Paper.PaperId == PaperReference.PaperReferenceId
         INNER JOIN
             @conferencePapers
         ON PaperReference.PaperId == @conferencePapers.PaperId;


//Aggregate reference count per conference year and reference paper year to create year matrix for reference count
@conferencePaperReferenceByYears =
    SELECT @conferencePaperReferences.Year,
           @conferencePaperReferences.ReferenceYear,
           COUNT( * ) AS ReferenceCount
    FROM @conferencePaperReferences
    //Papers shouldn't be citing papers published beyond one year. 
    //Microsoft Academic Graph does contain "future citations" due to newer book versions or noise. We exclude these for visualization
    WHERE @conferencePaperReferences.Year + 1 >= @conferencePaperReferences.ReferenceYear 
    GROUP BY @conferencePaperReferences.Year,
             @conferencePaperReferences.ReferenceYear;


OUTPUT @conferencePaperReferenceByYears
TO @conferenceReferenceMemoryOutPath
USING Outputters.Tsv(outputHeader : true);


