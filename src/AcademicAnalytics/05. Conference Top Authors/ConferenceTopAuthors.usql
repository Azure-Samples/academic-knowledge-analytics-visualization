// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// To do:
//   1. Run samples/CreateFunctions.usql to define functions before running this script
//   2. Replace <AzureStorageAccount> with your Azure Storage account containing MAG dataset
//   3. Replace <MagContainer> with the container name in Azure Storage account containing MAG dataset, usually in the form of mag-yyyy-mm-dd
//

DECLARE @blobAccount     string = "<AzureStorageAccount>";
DECLARE @blobContainer   string = "<MagContainer>";
DECLARE @uriPrefix       string = "wasb://" + @blobContainer + "@" + @blobAccount + "/";

//*******************Input Variable Section********************************
//        Change these variables for different calculations
//*************************************************************************
DECLARE @conferenceShortName string = "WWW"; //Conference abbreviated name 
DECLARE @conferenceTopAuthorsCount int = 20;  //Number of top authors to output
DECLARE @conferenceMostCitedAuthorsCount int = 20;  //Number of most cited authors to output

//*******************Constant Variable Section*****************************
//        Defining const variables to be used by other parts of the script
//*************************************************************************
//This output path pattern is hardcoded to the pbi file. If this is changed, the pbi file needs to be modified as well
DECLARE @conferenceAnalyticsBaseDir string = @"/output/conferenceAnalytics/";
DECLARE @outputBaseDir string = @conferenceAnalyticsBaseDir + @conferenceShortName + "/";
DECLARE @maDetailPagePrefix = @"https://academic.microsoft.com/author/";

//*************************Ouptut Section**********************************
//                 All output files for this script.
//*************************************************************************
DECLARE @conferenceTopAuthorsOutPath string = @outputBaseDir + "conferenceTopAuthors.tsv";
DECLARE @conferenceMostCitedAuthorsOutPath string = @outputBaseDir + "conferenceMostCitedAuthors.tsv";
DECLARE @conferenceCitedAuthorsByYearOutPath string = @outputBaseDir + "conferenceCitedAuthorsByYear.tsv";


// Load Academic Graph data
@conferenceSeries = ConferenceSeries(@uriPrefix);
@papers = Papers(@uriPrefix);
@authors = Authors(@uriPrefix);
@paperAuthorAffiliations = PaperAuthorAffiliations(@uriPrefix);
@paperReferences = PaperReferences(@uriPrefix);

//First find the conference series id by matching conference short name.
@targetConferenceSeriesId =
    SELECT (long?) ConferenceSeriesId AS ConferenceSeriesId //Cast long to long? to join against Paper table
    FROM @conferenceSeries
    WHERE NormalizedName == @conferenceShortName;


//Get all conference papers by conference series Id.
@conferencePapers =
    SELECT @papers.PaperId,
           @papers.CitationCount,
           @papers.OriginalTitle,
           @papers.Year,
           @papers.ConferenceSeriesId AS VenueId
    FROM @papers
         INNER JOIN
             @targetConferenceSeriesId
         ON @papers.ConferenceSeriesId == @targetConferenceSeriesId.ConferenceSeriesId;


//Get all [conference paper] -> [conference author] relationships
@conferenceAuthorsPapers =
    SELECT @authors.DisplayName AS AuthorName,
           @authors.AuthorId,
           @conferencePapers.PaperId,
           @conferencePapers.CitationCount
    FROM @conferencePapers
         INNER JOIN
             @paperAuthorAffiliations
         ON @conferencePapers.PaperId == @paperAuthorAffiliations.PaperId
         INNER JOIN
             @authors
         ON @paperAuthorAffiliations.AuthorId == @authors.AuthorId;


//Aggregate citation and publication count for each author
@conferenceTopAuthors =
    SELECT ANY_VALUE(@conferenceAuthorsPapers.AuthorName) AS AuthorName, //Guaranteed to have only 1 value since AuthorId is the key
           @maDetailPagePrefix + @conferenceAuthorsPapers.AuthorId AS DetailsUrl,
           COUNT( * ) AS PublicationCount,
           SUM(@conferenceAuthorsPapers.CitationCount) AS CitationCount
    FROM @conferenceAuthorsPapers
    GROUP BY @conferenceAuthorsPapers.AuthorId
    ORDER BY CitationCount DESC
    FETCH @conferenceTopAuthorsCount ROWS; //Only take top @conferenceTopAuthorsCount authors by citation count


//Create two ranks based on publication and citation to display on the x and y axis for comparison
@conferenceTopAuthors = 
    SELECT @conferenceTopAuthors.AuthorName,
           @conferenceTopAuthors.DetailsUrl,
           @conferenceTopAuthors.PublicationCount,
           @conferenceTopAuthors.CitationCount,
           RANK() OVER(ORDER BY @conferenceTopAuthors.CitationCount DESC) AS AuthorCitationRank,
           RANK() OVER(ORDER BY @conferenceTopAuthors.PublicationCount DESC) AS AuthorPublicationRank
    FROM @conferenceTopAuthors;
 
OUTPUT @conferenceTopAuthors
TO @conferenceTopAuthorsOutPath
USING Outputters.Tsv(outputHeader : true);   


//Get all reference from [conference Paper] -> [referenced paper]
@conferencePaperReferences =
    SELECT @conferencePapers.PaperId,
           @conferencePapers.Year,
           @papers.PaperId AS ReferenceId
    FROM @papers
         INNER JOIN
             @paperReferences
         ON @papers.PaperId == @paperReferences.PaperReferenceId
         INNER JOIN
             @conferencePapers
         ON @paperReferences.PaperId == @conferencePapers.PaperId;

//Get all conference paper -> paper -> author relationships to find most cited authors
@conferenceCitedAuthorsPapers =
    SELECT @conferencePaperReferences.PaperId,
           @conferencePaperReferences.Year,
           @authors.DisplayName AS AuthorName,
           @authors.AuthorId,
           @conferencePaperReferences.ReferenceId
    FROM @conferencePaperReferences
         INNER JOIN
             @paperAuthorAffiliations
         ON @conferencePaperReferences.ReferenceId == @paperAuthorAffiliations.PaperId
         INNER JOIN
             @authors
         ON @paperAuthorAffiliations.AuthorId == @authors.AuthorId;


//Aggregate publication and citation count for each author cited by conference paper
@conferenceMostCitedAuthors =
    SELECT ANY_VALUE(@conferenceCitedAuthorsPapers.AuthorName) AS AuthorName,
           @conferenceCitedAuthorsPapers.AuthorId,
           @maDetailPagePrefix + @conferenceCitedAuthorsPapers.AuthorId AS DetailsUrl,
           //Count distinct since one paper can be cited by mutiple conference papers
           COUNT(DISTINCT @conferenceCitedAuthorsPapers.ReferenceId) AS PublicationCount,
           COUNT( * ) AS CitationCount
    FROM @conferenceCitedAuthorsPapers
    GROUP BY AuthorId
    ORDER BY CitationCount DESC
    FETCH @conferenceMostCitedAuthorsCount ROWS; //Only take top @conferenceMostCitedAuthorsCount authors by citation count


OUTPUT @conferenceMostCitedAuthors
TO @conferenceMostCitedAuthorsOutPath
USING Outputters.Tsv(outputHeader : true);


//Aggregate yearly citation recieved from conference papers for most cited authors
@conferenceCitedAuthorsByYear =
    SELECT @conferenceCitedAuthorsPapers.AuthorId,
           @conferenceCitedAuthorsPapers.Year,
           COUNT( * ) AS CitationCount
    FROM @conferenceCitedAuthorsPapers
         INNER JOIN
             @conferenceMostCitedAuthors
         ON @conferenceCitedAuthorsPapers.AuthorId == @conferenceMostCitedAuthors.AuthorId //We only want to generate yearly citation for the top authors
    GROUP BY @conferenceCitedAuthorsPapers.AuthorId,
             Year;


OUTPUT @conferenceCitedAuthorsByYear
TO @conferenceCitedAuthorsByYearOutPath
USING Outputters.Tsv(outputHeader : true);